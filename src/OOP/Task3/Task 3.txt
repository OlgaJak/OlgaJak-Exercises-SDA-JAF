SHAPE class
Implement the Shape class. It should contain:
  colour information //ok
  information if colour should fill a shape //ok
  non-arguments constructor which will set: the color field to unknown and isFilled field to false //ok
  two-arguments constructor: colour, is Filled //ok
  getter methods which will be responsible for returning declared fields //ok
  setter methods which will be responsible for setting declared fields //ok
  toString method which should return the following information: Shape with colour of ? and filled/NotFilled, where ? is
   a placeholder for the colour and the filled/not filled info should be returned depending on the isFilled field //ok


CIRCLE class
Implement the Circle class. It should extend the Shape class. Implementation //ok
should meet the below criteria:
  information about the radius value //ok
  non-arguments constructor which will set: the colour field value to unknown,//ok
  the isFilled field value to false and the radius field value to 1           //ok
  three-arguments constructor: color , isFilled , radius                      //ok
  getter methods which will be responsible for returning the radius value     //ok
  setter methods which will be responsible for setting the radius value       //ok
  getArea method which will be responsible for calculating the surface area   //ok
  getPerimeter method which will be responsible for calculating the circuit   //ok
  toString method which should return the following information: Circle with
  radius=? which is a subclass off y , where ? is a placeholder for
   the radius value and the y info should be a result of the toString          //ok
   execution from the base class

RECTANGLE class
Implmenent the Rectangle class. It should extend the Shape class                    //ok
Implementation should meet the below criteria:
  information about the width and length value as a double type                     //ok
  non-arguments constructor which will set: the color field value to unknown        //ok
   the isFilled field value to false and the width and the length field value to 1  //ok
  four-arguments constructor: color , isFilled , width i length                     //ok
  getter methods which will be responsible for returning the width and length value //ok
  setter methods which will be responsible for setting the width and                //ok
  length value
  getArea method which will be responsible for calculating the surface area         //ok
  getPerimeter method which will be responsible for calculating the circuit         //ok
  toString method which should return the following information:                    //ok
   Rectangle with width=? and length=? which is a subclass off y ,
   where ? is a placeholder for the width and length value accordingly and the
   y info should be a result of the toString execution from the base class

SQUARE class
Implement the Square class which will extend the Rectangle class. It should                         //ok
not add any new field or feature, but it should force square behaviour on the base class methods.

Please provide an example usage of above implementation.